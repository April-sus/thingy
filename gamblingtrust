local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local remote = ReplicatedStorage:WaitForChild("Remote", 9e9):WaitForChild("FruitMinigameEvent", 9e9)
local appleToolName = "Apple"
local cooldownTime = 30

local appleTP = Vector3.new(63.6466064453125, 254.5, -665.425)
local cuttingBoardTP = Vector3.new(67.34397888183594, 254.5, -666.7305)

local playerGui = player:WaitForChild("PlayerGui")

-- State
local isInCooldown = false

-- Utility Functions
local function getCharacter()
	return player.Character or player.CharacterAdded:Wait()
end

local function getBackpack()
	return player:WaitForChild("Backpack")
end

local function hasAppleInBackpack()
	return getBackpack():FindFirstChild(appleToolName) ~= nil
end

local function teleportTo(position)
	local char = getCharacter()
	if char then
		char:PivotTo(CFrame.new(position))
	end
end

local function isPlayerDead()
	local char = player.Character
	return not (char and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0)
end

local function waitForCharacter()
	player.CharacterAdded:Wait()
	local char = getCharacter()
	char:WaitForChild("Humanoid")
end

local function fireMinigameRemote()
	remote:FireServer("Finish")
	print("[Main] Minigame remote fired!")
end

local function isFruitGuiOpen()
	local gui = playerGui:FindFirstChild("FruitMinigameGui")
	return gui and gui.Enabled
end

-- âœ… Background Apple tool monitor
task.spawn(function()
	while true do
		task.wait(1)
		if not isInCooldown and not isFruitGuiOpen() and not hasAppleInBackpack() then
			print("[Monitor] Apple tool missing. Going to Apple TP...")
			teleportTo(appleTP)
			repeat task.wait(2) until hasAppleInBackpack()
			print("[Monitor] Apple found.")

			-- Only teleport to cutting board if safe
			if not isInCooldown and not isFruitGuiOpen() and not isPlayerDead() then
				print("[Monitor] Going to cutting board.")
				teleportTo(cuttingBoardTP)
			end
		end
	end
end)

-- âœ… Main loop
while true do
	-- ðŸŸ¥ Death check: teleport to Apple TP even if cooldown is active
	if isPlayerDead() then
		repeat task.wait(1) until not isPlayerDead()
		print("[Main] Player respawned.")
		waitForCharacter()
		teleportTo(appleTP)
	end

	-- ðŸŸ¨ Wait for cooldown if it's still running
	while isInCooldown do
		task.wait(1)
	end

	-- ðŸŸ© Wait until player has Apple before going to cutting board
	while not hasAppleInBackpack() do
		print("[Main] Waiting for Apple tool...")
		teleportTo(appleTP)
		task.wait(2)
	end

	-- âœ… Go to cutting board
	teleportTo(cuttingBoardTP)

	-- âœ… Wait for FruitMinigame GUI to open
	local gui
	repeat
		gui = playerGui:FindFirstChild("FruitMinigameGui")
		if not gui then task.wait(1) end
	until gui

	repeat task.wait(0.5) until gui.Enabled

	-- âœ… Fire remote to complete minigame
	fireMinigameRemote()

	-- âœ… Start cooldown (no actions allowed during this)
	isInCooldown = true
	print("[Main] Cooldown started...")
	task.wait(cooldownTime)
	isInCooldown = false
	print("[Main] Cooldown ended.")
end
