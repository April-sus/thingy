local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local remote = ReplicatedStorage:WaitForChild("Remote", 9e9):WaitForChild("FruitMinigameEvent", 9e9)
local appleToolName = "Apple"
local cooldownTime = 30

local appleTP = Vector3.new(63.6466064453125, 254.5, -665.425)
local cuttingBoardTP = Vector3.new(67.34397888183594, 254.5, -666.7305)

local playerGui = player:WaitForChild("PlayerGui")

-- State
local isInCooldown = false
local lastProgressTime = tick()
local failsafeTimeout = 35

-- Utility Functions
local function getCharacter()
	return player.Character or player.CharacterAdded:Wait()
end

local function getBackpack()
	return player:WaitForChild("Backpack")
end

local function hasAppleInBackpack()
	return getBackpack():FindFirstChild(appleToolName) ~= nil
end

local function isFruitGuiOpen()
	local gui = playerGui:FindFirstChild("FruitMinigameGui")
	return gui and gui.Enabled
end

local function isPlayerDead()
	local char = player.Character
	return not (char and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0)
end

local function teleportTo(position)
	local char = getCharacter()
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then
		hrp = char:WaitForChild("HumanoidRootPart", 5)
	end
	if not hrp then
		warn("[Teleport] FAILED: No HumanoidRootPart")
		return
	end

	char:PivotTo(CFrame.new(position))
	lastProgressTime = tick()
end

local function fireMinigameRemote()
	remote:FireServer("Finish")
	print("[Main] Minigame remote fired!")
	lastProgressTime = tick()
end

-- ✅ Apple Monitor: SPAM teleport to Apple if missing, teleport to cutting board immediately when Apple found
task.spawn(function()
	local hadApple = false
	while true do
		task.wait(1)

		if isPlayerDead() or isFruitGuiOpen() or isInCooldown then
			continue
		end

		local hasApple = hasAppleInBackpack()

		if not hasApple then
			if hadApple then
				hadApple = false
			end
			print("[Monitor] No Apple. Teleporting to Apple TP...")
			teleportTo(appleTP)
		else
			if not hadApple then
				print("[Monitor] Apple found. Teleporting to cutting board...")
				teleportTo(cuttingBoardTP)
				hadApple = true
				lastProgressTime = tick()
			end
		end
	end
end)

-- ✅ Failsafe (restarts cycle if stuck)
task.spawn(function()
	while true do
		task.wait(2)
		if tick() - lastProgressTime >= failsafeTimeout then
			warn("[Failsafe] No progress in 35s. Forcing reset...")

			teleportTo(appleTP)

			repeat task.wait(1) until hasAppleInBackpack() or isPlayerDead()
			lastProgressTime = tick()

			if not isInCooldown and not isFruitGuiOpen() and not isPlayerDead() then
				teleportTo(cuttingBoardTP)
			end
		end
	end
end)

-- ✅ Main loop (no respawn check anymore)
while true do
	while isInCooldown do task.wait(1) end

	while not hasAppleInBackpack() do
		print("[Main] Apple not found, teleporting...")
		teleportTo(appleTP)
		task.wait(1)
	end

	teleportTo(cuttingBoardTP)

	local gui
	repeat
		gui = playerGui:FindFirstChild("FruitMinigameGui")
		task.wait(1)
	until gui

	repeat task.wait(0.5) until gui.Enabled
	lastProgressTime = tick()

	fireMinigameRemote()

	isInCooldown = true
	print("[Main] Cooldown started...")
	task.wait(cooldownTime)
	isInCooldown = false
	print("[Main] Cooldown ended.")
	lastProgressTime = tick()
end
